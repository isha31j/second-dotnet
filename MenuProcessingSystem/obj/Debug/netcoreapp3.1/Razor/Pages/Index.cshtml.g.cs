#pragma checksum "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "47e90edefc78ea76885f0c3db6a5bbdd0a13f8db"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(MenuProcessingSystem.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
namespace MenuProcessingSystem.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\_ViewImports.cshtml"
using MenuProcessingSystem;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47e90edefc78ea76885f0c3db6a5bbdd0a13f8db", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"446e5108e8b8be9a02f36980a8d7b2313c871ea3", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/barchart.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("float:right; height:18px; width:18px;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/piechart.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/filter.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""text-left"" style=""display:inline-block; width: 100%"">
    <h2 style=""display:inline-block;""><b>Ticket Summary</b></h2>
    <div id=""showGrid"" class=""toggle-div"" style=""background-color: #E7E7E7; background-image:url('images/DisableGrid.svg'); margin-right: 35px; "" onclick=""toggleChartGrid(this);"">
    </div>
    <div id=""showChart"" class=""toggle-div"" style=""background-color: #669D69; background-image:url('images/ActiveChart.svg');"" onclick=""toggleChartGrid(this);"">
    </div>
</div>

<div id=""chartDivContainer"" class=""pt-3"" style=""display:block;"">
    <div class=""mr-3 widget"" style=""background: #6C88AF;"">
        ");
#nullable restore
#line 17 "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\Index.cshtml"
   Write(Html.Label("Menu Title confirmation"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        <span class=\"widget-kpi\">3</span>\r\n    </div>\r\n    <div class=\"mr-3 widget\" style=\"background: #939BC7;\">\r\n        ");
#nullable restore
#line 21 "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\Index.cshtml"
   Write(Html.Label("Choices confirmation"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        <span class=\"widget-kpi\">3</span>\r\n    </div>\r\n    <div class=\"mr-3 widget\" style=\"background: #968AAF;\">\r\n        ");
#nullable restore
#line 25 "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\Index.cshtml"
   Write(Html.Label("Options confirmation"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n        <span class=\"widget-kpi\">1</span>\r\n    </div>\r\n    <div class=\"mr-3 widget\" style=\"background: #77B3BE;\">\r\n        ");
#nullable restore
#line 29 "C:\Users\BS3041837\source\repos\MenuProcessingSystem\MenuProcessingSystem\Pages\Index.cshtml"
   Write(Html.Label("Price confirmation"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
        <span class=""widget-kpi"">0</span>
    </div>
    <div style=""margin-top:35px;"">
        <div class=""chart-widget"" style=""width:570px; margin-right:25px;"">
            <div class=""chart-widget-hdr"">
                <h3 style=""width:100%"">Trend of Requests</h3>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47e90edefc78ea76885f0c3db6a5bbdd0a13f8db7027", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""chart-container"" style=""width:570px; height:250px;"">
                <canvas id=""TrendReqChart""></canvas>
            </div>
        </div>
        <div class=""chart-widget"" style=""width:351px; margin-right:25px;"">
            <div class=""chart-widget-hdr"">
                <h3 style=""width:100%"">Process Summary</h3>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47e90edefc78ea76885f0c3db6a5bbdd0a13f8db8538", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""chart-container"" style=""width:351px; height:250px;"">
                <canvas id=""ProcSumChart"" style=""margin-top:11%""></canvas>
            </div>
        </div>
        <div class=""chart-widget"" style=""width:301px;"">
            <div class=""chart-widget-hdr"">
                <h3 style=""width:100%""></h3>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47e90edefc78ea76885f0c3db6a5bbdd0a13f8db10039", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div>
                <label class=""container"">One
                    <input type=""checkbox"" checked=""checked"">
                    <span class=""checkmark""></span>
                </label>
                <label class=""container"">Two
                    <input type=""checkbox"" checked=""checked"">
                    <span class=""checkmark""></span>
                </label>
                <!--<input type=""checkbox"" style=""background-color:#669D69"" checked />
                <img src=""~/images/edit.svg"" />
                <input type=""checkbox"" style=""background-color:#669D69"" checked />
                <img src=""~/images/edit.svg"" />-->
            </div>
        </div>
    </div>
</div>
<div id=""gridDivContainer"" class=""pt-3"" style=""display: none;"">
    grid will be here...
</div>
    <script type=""text/javascript"">
        function toggleChartGrid(obj) {
            var chartDiv = document.getElementById('chartDivContainer');
            var gridDiv = d");
            WriteLiteral(@"ocument.getElementById('gridDivContainer');
            if (gridDiv != null && chartDiv != null && gridDiv != undefined && chartDiv != undefined) {
                var showGridDiv = document.getElementById('showGrid');
                var showChartDiv = document.getElementById('showChart');
                if (obj.id == 'showGrid') {
                    chartDiv.style.display = 'none';
                    gridDiv.style.display = 'block';
                    if (showChartDiv != null && showGridDiv != null && showChartDiv != undefined && showGridDiv != undefined) {
                        showGridDiv.style.backgroundColor = '#669D69';
                        showGridDiv.style.backgroundImage = ""url('images/ActiveGrid.svg')"";
                        showChartDiv.style.backgroundColor = '#E7E7E7';
                        showChartDiv.style.backgroundImage = ""url('images/DisableChart.svg')"";
                    }
                }
                else {
                    chartDiv.style.display = '");
            WriteLiteral(@"block';
                    gridDiv.style.display = 'none';
                    if (showChartDiv != null && showGridDiv != null && showChartDiv != undefined && showGridDiv != undefined) {
                        showGridDiv.style.backgroundColor = '#E7E7E7';
                        showGridDiv.style.backgroundImage = ""url('images/DisableGrid.svg')"";
                        showChartDiv.style.backgroundColor = '#669D69';
                        showChartDiv.style.backgroundImage = ""url('images/ActiveChart.svg')"";
                    }
                }
            }
        }

        /**Bar chart rendering**/
        $(function () {
            var chartName = ""TrendReqChart"";
            var ctx = document.getElementById(chartName).getContext('2d');
            var data = {
                labels: ['23-11-2019', '24-11-2019', '25-11-2019', '26-11-2019'],
                datasets: [{
                    label: ""Requests recieved"",
                    borderWidth: 1,
                    ba");
            WriteLiteral(@"ckgroundColor: ['#669D69', '#669D69', '#669D69', '#669D69'],
                    data: [62, 75, 85, 23]
                },
                {
                    label: ""Requests processed"",
                    borderWidth: 1,
                    backgroundColor: ['#CD9C39', '#CD9C39', '#CD9C39', '#CD9C39'],
                    data: [28, 35, 48, 10]
                }]
            };

            var options = {
                maintainAspectRatio: false,
                title: {
                    display: false,
                    text: 'Trend of Requests',
                    fontFamily: ""'MontserratM'"",
                    fontColor: '#000000',
                    fontStyle: 'normal'
                },
                legend: {
                    position: 'bottom',
                    labels: {
                        usePointStyle: true,
                        boxWidth: 8,
                        fontSize: 9,
                        fontFamily: ""'MontserratM'"",
            ");
            WriteLiteral(@"            fontColor: '#000000',
                        fontStyle: 'normal'
                    }
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            stepSize: 25,
                            fontSize: 8,
                            fontFamily: ""'MontserratM'"",
                            fontColor: '#000000',
                            fontStyle: 'normal'
                        },
                        gridLines: {
                            display: true,
                            offsetGridLines: false,
                            color: ""#CCCCCC""
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Requests',
                            fontSize: 9,
                            fontFamily: ""'MontserratM'"",
                            fontColor: '#000");
            WriteLiteral(@"000',
                            fontStyle: 'normal'
                        }
                    }],
                    xAxes: [{
                        ticks: {
                            beginAtZero: true,
                            fontSize: 8,
                            fontFamily: ""'MontserratM'"",
                            fontColor: '#000000',
                            fontStyle: 'normal'
                        },
                        gridLines: {
                            display: true,
                            offsetGridLines: false,
                            color: ""#CCCCCC""
                        },
                        scaleLabel: {
                            display: true,
                            labelString: 'Date',
                            fontSize: 9,
                            fontFamily: ""'MontserratM'"",
                            fontColor: '#000000',
                            fontStyle: 'normal'
                        }
      ");
            WriteLiteral(@"              }]
                },
                layout: {
                    padding: {
                        left: 40,
                        right: 40,
                        top: 35,
                        bottom: 15
                    }
                }
            };

            var myChart = new Chart(ctx, {
                options: options,
                data: data,
                type: 'bar'
            });
        });

        /**Dougnnut chart rendering**/
        $(function () {
            var chartName = ""ProcSumChart"";
            var ctx = document.getElementById(chartName).getContext('2d');
            var data = {
                labels: ['Extracted\nSuccessfully', 'Confidence\nIssues', 'Accuracy\nIssues'],
                datasets: [{
                    borderWidth: 1,
                    backgroundColor: ['#3E5E78', '#8ECEAD', '#D0D981'],
                    data: [50, 30, 20]
                }]
            };

            var options = {
  ");
            WriteLiteral(@"              maintainAspectRatio: true,
                //zoomOutPercentage: 30,
                cutoutPercentage: 35,
                rotation: 30,
                responsive: true,
                tooltips: {
                    enabled: false
                },
                legend: {
                    display: false,
                    labels: {
                        usePointStyle: false
                    }
                },
                layout: {
                    padding: {
                        left: 0,
                        right: 0,
                        top: 35,
                        bottom: 0
                    }
                },
                plugins: {
                    legend: false,
                    outlabels: {
                        lineColor: '#000',
                        backgroundColor: 'white',
                        borderColor: 'white',
                        text: '%l',
                        color: 'black',
        ");
            WriteLiteral(@"                lineWidth: 1,
                        //stretch: 10,
                        font: {
                            resizable: true,
                            minSize: 8,
                            maxSize: 10,
                            family: 'MontserratM'
                        }
                    }
                }
            };

            var myChart = new Chart(ctx, {
                options: options,
                data: data,
                showDatapoints: true,
                type: 'doughnut'
            });

            Chart.plugins.register({
              afterDatasetsDraw: function(chartInstance, easing) {
                // To only draw at the end of animation, check for easing === 1
                var ctx = chartInstance.chart.ctx;
                chartInstance.data.datasets.forEach(function(dataset, i) {
                  var meta = chartInstance.getDatasetMeta(i);
                  if (!meta.hidden) {
                    meta.data.forEac");
            WriteLiteral(@"h(function(element, index) {
                      // Draw the text in black, with the specified font
                      ctx.fillStyle = 'white';
                      var fontSize = 10;
                      var fontStyle = 'normal';
                      var fontFamily = 'MontserratM';
                      ctx.font = Chart.helpers.fontString(fontSize, fontStyle, fontFamily);
                      // Just naively convert to string for now
                      var dataString = dataset.data[index].toString();
                      // Make sure alignment settings are correct
                      ctx.textAlign = 'center';
                      ctx.textBaseline = 'middle';
                      var padding = 0;
                      var position = element.tooltipPosition();
                      ctx.fillText(dataString + '%', position.x, position.y - (fontSize / 2) - padding);
                    });
                  }
                });
              }
            });

        });
 ");
            WriteLiteral("   </script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
